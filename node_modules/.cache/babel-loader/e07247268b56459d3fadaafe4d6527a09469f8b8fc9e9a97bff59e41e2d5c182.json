{"ast":null,"code":"import\"./App.css\";import React from\"react\";import{Logo}from\"./Logo\";import{Tests}from\"./Tests\";import{Sections}from\"./Sections\";import{Topics}from\"./Topics\";import{defaultTests}from\"./defaultTests\";import{ImportButton}from\"./ImportButton\";import{ExportButton}from\"./ExportButton\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){const[tests,setTests]=React.useState(defaultTests);const[activeTest,setActiveTest]=React.useState(null);const[activeSection,setActiveSection]=React.useState(null);const activeTestObj=tests.find(test=>test.id===activeTest);const activeSectionObj=activeTestObj?activeTestObj.sections.find(section=>section.id===activeSection):null;function handleTestClick(testID){setActiveTest(testID);setActiveSection(null);}function handleSectionClick(sectionID){setActiveSection(sectionID);}function handleAddTest(){const newTest={id:tests.length+1,name:\"\",sections:[]};setTests([...tests,newTest]);}function handleTestUpdate(newTest){const updatedTests=tests.map(test=>{if(test.id===newTest.id){return newTest;}return test;});setTests(updatedTests);}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Logo,{}),/*#__PURE__*/_jsx(Tests,{tests:tests,setTests:setTests,handleClick:handleTestClick,activeTest:activeTest,activeSection:null,handleAddTest:handleAddTest,handleTestUpdate:handleTestUpdate}),activeTestObj&&/*#__PURE__*/_jsx(Sections,{test:activeTestObj,handleClick:handleSectionClick,activeSection:activeSection,handleTestUpdate:handleTestUpdate}),activeSectionObj&&/*#__PURE__*/_jsx(Topics,{test:activeTestObj,handleTestUpdate:handleTestUpdate,activeSection:activeSection}),/*#__PURE__*/_jsxs(\"div\",{className:\"footer\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Data Export and Import Options\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"file-buttons\",children:[/*#__PURE__*/_jsx(ExportButton,{tests:tests}),/*#__PURE__*/_jsx(ImportButton,{setTests:setTests})]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{style:{fontSize:\"14px\"},children:[\"Thank you for visiting my study app! I hope you find it usefull in your examination preparation. If you have any questions or feedback, here's my \",/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/ApeGoat\",children:\"Github\"})]})})]});}","map":{"version":3,"names":["React","Logo","Tests","Sections","Topics","defaultTests","ImportButton","ExportButton","jsx","_jsx","jsxs","_jsxs","App","tests","setTests","useState","activeTest","setActiveTest","activeSection","setActiveSection","activeTestObj","find","test","id","activeSectionObj","sections","section","handleTestClick","testID","handleSectionClick","sectionID","handleAddTest","newTest","length","name","handleTestUpdate","updatedTests","map","className","children","handleClick","style","fontSize","href"],"sources":["/Users/yams/Documents/studyhome/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport { Logo } from \"./Logo\";\nimport { Tests } from \"./Tests\";\nimport { Sections } from \"./Sections\";\nimport { Topics } from \"./Topics\";\nimport { defaultTests } from \"./defaultTests\";\nimport { ImportButton } from \"./ImportButton\";\nimport { ExportButton } from \"./ExportButton\";\n\nexport default function App() {\n  const [tests, setTests] = React.useState(defaultTests);\n  const [activeTest, setActiveTest] = React.useState(null);\n  const [activeSection, setActiveSection] = React.useState(null);\n  const activeTestObj = tests.find((test) => test.id === activeTest);\n  const activeSectionObj = activeTestObj\n    ? activeTestObj.sections.find((section) => section.id === activeSection)\n    : null;\n\n  function handleTestClick(testID) {\n    setActiveTest(testID);\n    setActiveSection(null);\n  }\n  function handleSectionClick(sectionID) {\n    setActiveSection(sectionID);\n  }\n  function handleAddTest() {\n    const newTest = {\n      id: tests.length + 1,\n      name: ``,\n      sections: [],\n    };\n    setTests([...tests, newTest]);\n  }\n  function handleTestUpdate(newTest) {\n    const updatedTests = tests.map((test) => {\n      if (test.id === newTest.id) {\n        return newTest;\n      }\n      return test;\n    });\n    setTests(updatedTests);\n  }\n\n  return (\n    <div className=\"App\">\n      <Logo />\n      <Tests\n        tests={tests}\n        setTests={setTests}\n        handleClick={handleTestClick}\n        activeTest={activeTest}\n        activeSection={null}\n        handleAddTest={handleAddTest}\n        handleTestUpdate={handleTestUpdate}\n      />\n      {activeTestObj && (\n        <Sections\n          test={activeTestObj}\n          handleClick={handleSectionClick}\n          activeSection={activeSection}\n          handleTestUpdate={handleTestUpdate}\n        />\n      )}\n      {activeSectionObj && (\n        <Topics\n          test={activeTestObj}\n          handleTestUpdate={handleTestUpdate}\n          activeSection={activeSection}\n        />\n      )}\n      <div className=\"footer\">\n        <h2>Data Export and Import Options</h2>\n        <div className=\"file-buttons\">\n          <ExportButton tests={tests} />\n          <ImportButton setTests={setTests} />\n        </div>\n      </div>\n      <br />\n      <div>\n        <p style={{ fontSize: \"14px\" }}>\n          Thank you for visiting my study app! I hope you find it usefull in\n          your examination preparation. If you have any questions or feedback,\n          here's my <a href=\"https://github.com/ApeGoat\">Github</a>\n        </p>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}