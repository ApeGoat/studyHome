{"ast":null,"code":"var _jsxFileName = \"/Users/yams/Documents/studyHome/studyhome/src/Tests.js\";\nimport React from \"react\";\nimport { AddButton } from \"./AddButton\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Tests({\n  tests,\n  handleClick,\n  activeTest,\n  handleAddTest,\n  handleTestUpdate\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-nav-bar\",\n      children: [tests.map(test => /*#__PURE__*/_jsxDEV(Test, {\n        test: test,\n        handleClick: handleClick,\n        active: test.id === activeTest,\n        handleTestUpdate: handleTestUpdate\n      }, test.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(AddButton, {\n        handleClick: handleAddTest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Tests;\nfunction Test({\n  test,\n  handleClick,\n  active,\n  handleTestUpdate\n}) {\n  function handleNameChange(e) {\n    handleTestUpdate({\n      ...test,\n      name: e.target.value\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleClick(test.id),\n      className: `test ${active ? \"activeTest\" : \"\"}`,\n      children: active ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"test-name\",\n          type: \"text\",\n          onChange: handleNameChange,\n          value: test.name,\n          placeholder: \"Enter Test Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: test.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c2 = Test;\nvar _c, _c2;\n$RefreshReg$(_c, \"Tests\");\n$RefreshReg$(_c2, \"Test\");","map":{"version":3,"names":["React","AddButton","jsxDEV","_jsxDEV","Fragment","_Fragment","Tests","tests","handleClick","activeTest","handleAddTest","handleTestUpdate","children","className","map","test","Test","active","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","handleNameChange","e","name","target","value","onClick","type","onChange","placeholder","_c2","$RefreshReg$"],"sources":["/Users/yams/Documents/studyHome/studyhome/src/Tests.js"],"sourcesContent":["import React from \"react\";\nimport { AddButton } from \"./AddButton\";\n\nexport function Tests({\n  tests,\n  handleClick,\n  activeTest,\n  handleAddTest,\n  handleTestUpdate,\n}) {\n  return (\n    <>\n      <div className=\"test-nav-bar\">\n        {tests.map((test) => (\n          <Test\n            key={test.id}\n            test={test}\n            handleClick={handleClick}\n            active={test.id === activeTest}\n            handleTestUpdate={handleTestUpdate}\n          />\n        ))}\n        <AddButton handleClick={handleAddTest} />\n      </div>\n    </>\n  );\n}\nfunction Test({ test, handleClick, active, handleTestUpdate }) {\n  function handleNameChange(e) {\n    handleTestUpdate({ ...test, name: e.target.value });\n  }\n  return (\n    <>\n      <div\n        onClick={() => handleClick(test.id)}\n        className={`test ${active ? \"activeTest\" : \"\"}`}\n      >\n        {active ? (\n          <h1>\n            <input\n              className=\"test-name\"\n              type=\"text\"\n              onChange={handleNameChange}\n              value={test.name}\n              placeholder=\"Enter Test Name\"\n            />\n          </h1>\n        ) : (\n          <h1>{test.name}</h1>\n        )}\n      </div>\n    </>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,OAAO,SAASC,KAAKA,CAAC;EACpBC,KAAK;EACLC,WAAW;EACXC,UAAU;EACVC,aAAa;EACbC;AACF,CAAC,EAAE;EACD,oBACER,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA;MAAKU,SAAS,EAAC,cAAc;MAAAD,QAAA,GAC1BL,KAAK,CAACO,GAAG,CAAEC,IAAI,iBACdZ,OAAA,CAACa,IAAI;QAEHD,IAAI,EAAEA,IAAK;QACXP,WAAW,EAAEA,WAAY;QACzBS,MAAM,EAAEF,IAAI,CAACG,EAAE,KAAKT,UAAW;QAC/BE,gBAAgB,EAAEA;MAAiB,GAJ9BI,IAAI,CAACG,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKb,CACF,CAAC,eACFnB,OAAA,CAACF,SAAS;QAACO,WAAW,EAAEE;MAAc;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC;EAAC,gBACN,CAAC;AAEP;AAACC,EAAA,GAvBejB,KAAK;AAwBrB,SAASU,IAAIA,CAAC;EAAED,IAAI;EAAEP,WAAW;EAAES,MAAM;EAAEN;AAAiB,CAAC,EAAE;EAC7D,SAASa,gBAAgBA,CAACC,CAAC,EAAE;IAC3Bd,gBAAgB,CAAC;MAAE,GAAGI,IAAI;MAAEW,IAAI,EAAED,CAAC,CAACE,MAAM,CAACC;IAAM,CAAC,CAAC;EACrD;EACA,oBACEzB,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA;MACE0B,OAAO,EAAEA,CAAA,KAAMrB,WAAW,CAACO,IAAI,CAACG,EAAE,CAAE;MACpCL,SAAS,EAAE,QAAQI,MAAM,GAAG,YAAY,GAAG,EAAE,EAAG;MAAAL,QAAA,EAE/CK,MAAM,gBACLd,OAAA;QAAAS,QAAA,eACET,OAAA;UACEU,SAAS,EAAC,WAAW;UACrBiB,IAAI,EAAC,MAAM;UACXC,QAAQ,EAAEP,gBAAiB;UAC3BI,KAAK,EAAEb,IAAI,CAACW,IAAK;UACjBM,WAAW,EAAC;QAAiB;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,gBAELnB,OAAA;QAAAS,QAAA,EAAKG,IAAI,CAACW;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IACpB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC,gBACN,CAAC;AAEP;AAACW,GAAA,GA1BQjB,IAAI;AAAA,IAAAO,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}