{"ast":null,"code":"var _jsxFileName = \"/Users/yams/Documents/studyHome/studyhome/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React from \"react\";\nimport { Logo } from \"./Logo\";\nimport { Tests } from \"./Tests\";\nimport { Sections } from \"./Sections\";\nimport { Topics } from \"./Topics\";\nimport { defaultTests } from \"./defaultTests\";\nimport { ImportButton } from \"./ImportButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [tests, setTests] = React.useState(defaultTests);\n  const [activeTest, setActiveTest] = React.useState(null);\n  const [activeSection, setActiveSection] = React.useState(null);\n  const activeTestObj = tests.find(test => test.id === activeTest);\n  const activeSectionObj = activeTestObj ? activeTestObj.sections.find(section => section.id === activeSection) : null;\n  function handleTestClick(testID) {\n    setActiveTest(testID);\n    setActiveSection(null);\n  }\n  function handleSectionClick(sectionID) {\n    setActiveSection(sectionID);\n  }\n  function handleAddTest() {\n    const newTest = {\n      id: tests.length + 1,\n      name: ``,\n      sections: []\n    };\n    setTests([...tests, newTest]);\n  }\n  function handleTestUpdate(newTest) {\n    const updatedTests = tests.map(test => {\n      if (test.id === newTest.id) {\n        return newTest;\n      }\n      return test;\n    });\n    setTests(updatedTests);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tests, {\n      tests: tests,\n      handleClick: handleTestClick,\n      activeTest: activeTest,\n      activeSection: null,\n      handleAddTest: handleAddTest,\n      handleTestUpdate: handleTestUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), activeTestObj && /*#__PURE__*/_jsxDEV(Sections, {\n      test: activeTestObj,\n      handleClick: handleSectionClick,\n      activeSection: activeSection,\n      handleTestUpdate: handleTestUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), activeSectionObj && /*#__PURE__*/_jsxDEV(Topics, {\n      test: activeTestObj,\n      handleTestUpdate: handleTestUpdate,\n      activeSection: activeSection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Data Export and Import Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(ExportButton, {\n          tests: tests\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImportButton, {\n          setTests: setTests\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gN9pmCysNAWpKC73M7UCOvlh1os=\");\n_c = App;\nfunction ExportButton({\n  tests\n}) {\n  function updateTestFile() {\n    let data = JSON.stringify(tests);\n    let blob = new Blob([data], {\n      type: \"application/json\"\n    });\n    let url = URL.createObjectURL(blob);\n    let a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"tests.json\";\n    a.click();\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"export\",\n    onClick: updateTestFile,\n    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Click Here to Download Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ExportButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ExportButton\");","map":{"version":3,"names":["React","Logo","Tests","Sections","Topics","defaultTests","ImportButton","jsxDEV","_jsxDEV","App","_s","tests","setTests","useState","activeTest","setActiveTest","activeSection","setActiveSection","activeTestObj","find","test","id","activeSectionObj","sections","section","handleTestClick","testID","handleSectionClick","sectionID","handleAddTest","newTest","length","name","handleTestUpdate","updatedTests","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleClick","ExportButton","_c","updateTestFile","data","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","onClick","_c2","$RefreshReg$"],"sources":["/Users/yams/Documents/studyHome/studyhome/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport { Logo } from \"./Logo\";\nimport { Tests } from \"./Tests\";\nimport { Sections } from \"./Sections\";\nimport { Topics } from \"./Topics\";\nimport { defaultTests } from \"./defaultTests\";\nimport { ImportButton } from \"./ImportButton\";\n\nexport default function App() {\n  const [tests, setTests] = React.useState(defaultTests);\n  const [activeTest, setActiveTest] = React.useState(null);\n  const [activeSection, setActiveSection] = React.useState(null);\n  const activeTestObj = tests.find((test) => test.id === activeTest);\n  const activeSectionObj = activeTestObj\n    ? activeTestObj.sections.find((section) => section.id === activeSection)\n    : null;\n\n  function handleTestClick(testID) {\n    setActiveTest(testID);\n    setActiveSection(null);\n  }\n  function handleSectionClick(sectionID) {\n    setActiveSection(sectionID);\n  }\n  function handleAddTest() {\n    const newTest = {\n      id: tests.length + 1,\n      name: ``,\n      sections: [],\n    };\n    setTests([...tests, newTest]);\n  }\n  function handleTestUpdate(newTest) {\n    const updatedTests = tests.map((test) => {\n      if (test.id === newTest.id) {\n        return newTest;\n      }\n      return test;\n    });\n    setTests(updatedTests);\n  }\n\n  return (\n    <div className=\"App\">\n      <Logo />\n      <Tests\n        tests={tests}\n        handleClick={handleTestClick}\n        activeTest={activeTest}\n        activeSection={null}\n        handleAddTest={handleAddTest}\n        handleTestUpdate={handleTestUpdate}\n      />\n      {activeTestObj && (\n        <Sections\n          test={activeTestObj}\n          handleClick={handleSectionClick}\n          activeSection={activeSection}\n          handleTestUpdate={handleTestUpdate}\n        />\n      )}\n      {activeSectionObj && (\n        <Topics\n          test={activeTestObj}\n          handleTestUpdate={handleTestUpdate}\n          activeSection={activeSection}\n        />\n      )}\n      <div className=\"footer\">\n        <h2>Data Export and Import Options</h2>\n        <div className=\"file-buttons\">\n          <ExportButton tests={tests} />\n          <ImportButton setTests={setTests} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction ExportButton({ tests }) {\n  function updateTestFile() {\n    let data = JSON.stringify(tests);\n    let blob = new Blob([data], { type: \"application/json\" });\n    let url = URL.createObjectURL(blob);\n    let a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"tests.json\";\n    a.click();\n  }\n  return (\n    <button className=\"export\" onClick={updateTestFile}>\n      <h4>Click Here to Download Data</h4>\n    </button>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}